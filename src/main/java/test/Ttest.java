package test;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.lang.ref.Reference;
import java.lang.reflect.Field;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class Ttest {
    private static Object DataInputStream;

    public static void main(String[] args) throws Exception{
//        org.apache.catalina.core.ApplicationFilterConfig

//        String key = "8104d0a89bac46b8";
//        String text = "";
//        byte[] ciphertext =Base64.getDecoder().decode(text);
//        Cipher c=Cipher.getInstance("AES");
//        c.init(2,new SecretKeySpec(key.getBytes(),"AES"));
//        byte [] classdata = c.doFinal(ciphertext);
//        System.out.println("还原出来的字节码为："+new String(classdata));
//        FileOutputStream fos = new FileOutputStream(new File("eval.class"));
//        fos.write(classdata);
//        System.out.println("eval文件写出成功");
//
//        String he ="xx";
//        if (DataInputStream  instanceof Field) {
//            System.out.println("xxx");
//        }

//        String stoCtext= "30\n" +
//                "3X..S[\n" +
//                "...-Qux..2...'S..~.[.A.C..M|.H.U...q..kT.\n" +
//                "0";
//        Cipher c1=Cipher.getInstance("AES");
//        c.init(2,new SecretKeySpec(key.getBytes(),"AES"));
//        byte [] classdata1 = c.doFinal(stoCtext.getBytes());
//        System.out.println(new String(classdata1));
//        Reference reference
//        ClassLoader
    }
}
